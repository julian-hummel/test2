/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 * Author of the layout is: Julian Hummel
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <locale/keys_de.h>

&mt {
  flavor = "tap-preferred";
  tapping_term_ms = <200>;
};

/ { 

    combos {
        compatible = "zmk,combos";
	/*
                           KEY POSITIONS
          ╭────────────────────╮ ╭────────────────────╮
          │  0   1   2   3   4 │ │  5   6   7   8   9 │
          │ 10  11  12  13  14 │ │ 15  16  17  18  19 │
          │ 20  21  22  23  24 │ │ 25  26  27  28  29 │
          ╰───────────╮ 30  31 │ │ 32  33 ╭───────────╯
                      ╰────────╯ ╰────────╯
        */
	
        combo_esc {
            timeout-ms = <50>;
            key-positions = <0 1>;
            bindings = <&kp ESC>;
        };
	
	combo_ctrlaltright {
            timeout-ms = <50>;
            key-positions = <16 17>;
            bindings = <&kp LC(LSHIFT)>;
        };
	
	switch_screens {
            timeout-ms = <50>;
            key-positions = <6 7>;
            bindings = <&kp LG(LS(LEFT))>;
        };
      
      	/* Activates the selection with the mouse for an area to screenshot. 
	The screenshot is copied to the clipboard. */
	screenshot_copy_to_clipboard {
            timeout-ms = <50>;
            key-positions = <12 13>;
            bindings = <&kp LG(LS(S))>;
        };
	
	/* Activates the selection with the mouse for an area to screenshot. 
	The screenshot is saved to the specified location. */
	screenshot_with_save {
            timeout-ms = <50>;
            key-positions = <22 23>;
            bindings = <&kp LG(LS(NUM_4))>;
        };
	
         combo_tab {
            timeout-ms = <50>;
            key-positions = <10 11>;
            bindings = <&kp TAB>;
        };
        
        
        
                    combo_lalt {
            timeout-ms = <50>;
            key-positions = <11 12>;
            bindings = <&kp LALT>;
        };
        
           combo_rgui {
            timeout-ms = <50>;
            key-positions = <17 18>;
            bindings = <&kp RGUI>;
        };
	
	to_last_layer {
            timeout-ms = <50>;
            key-positions = <17 18>;
            bindings = <&mo 3>;
        };
        

        
    };
    
    macros {
        german_oe: german_oe {
            label = "german_oe";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap_time 0>
	    	      ,<&macro_tap &kp DQT &kp O>;
        };
	german_ae: german_ae {
            label = "german_ae";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap_time 0>
	    	      ,<&macro_tap &kp DQT &kp A>;
        };
	german_ue: german_ue {
            label = "german_ue";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap_time 0>
	    	      ,<&macro_tap &kp DQT &kp U>;
        }; 
	german_ue_b: german_ue_b {
            label = "german_ue_b";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap_time 0>
	    	      ,<&macro_tap &kp DQT &kp LS(U)>;
        }; 
	german_oe_b: german_oe_b {
            label = "german_oe_b";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap_time 0>
	    	      ,<&macro_tap &kp DQT &kp LS(O)>;
        }; 
	german_ae_b: german_ae_b {
            label = "german_ae_b";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap_time 0>
	    	      ,<&macro_tap &kp DQT &kp LS(A)>;
        }; 
    };
    
    behaviors {
    	tap_ue: tap_dance_0 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_0";
            #binding-cells = <0>;
            tapping-term-ms = <250>;
            bindings = <&german_ue>, <&german_ue_b>;
        };
	tap_oe: tap_dance_1 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_1";
            #binding-cells = <0>;
            tapping-term-ms = <250>;
            bindings = <&german_oe>, <&german_oe_b>;
        };
	tap_ae: tap_dance_2 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_2";
            #binding-cells = <0>;
            tapping-term-ms = <250>;
            bindings = <&german_ae>, <&german_ae_b>;
        };
    };

        keymap {
                compatible = "zmk,keymap";
                
       		default_layer {
		bindings = <
		&kp Q &kp W &kp E &kp R &kp T 						&kp Y &kp U  &kp I &kp O &kp P
		&kp A &kp S &kp D &mt LCTRL F &kp G 			      			&kp H &mt LGUI J &mt LCTRL K &kp L &kp LALT
		&kp Z &kp X &kp C &kp V &kp B				        &kp M &kp N  &mt DE_SEMI DE_COMMA &mt DE_COLON DE_DOT &kp LSFT 
          				 &mo 2 &kp LSFT  		        	&kp SPC &mo 1 
		>;
		};

       		left_layer {
		bindings = <
		&mt DE_QMARK DE_EXCL &kp DE_AT &kp DE_HASH &kp DE_A_UMLAUT &kp DE_PRCNT				&kp DE_A_UMLAUT &kp DE_U_UMLAUT &kp DE_O_UMLAUT &kp DE_CAPITAL_SZ &kp BKSP 
		&kp TAB &mt DE_BACKSLASH DE_SLASH &mt DE_TILDE DE_DLLR &mt DE_GRAVE DE_SQT &kp DE_DQT 			&kp DE_LPAR &kp DE_RPAR &kp DE_LBRC &kp DE_RBRC &kp ENTER 
		&kp ESC &kp DE_CARET &kp LA(S) &kp RS(NUM_0) &kp LS(NUM_6) 		&kp DE_LBKT &kp DE_RBKT &kp DE_LESS_THAN &kp DE_GREATER_THAN &kp TAB 
					    &mt DE_PIPE DE_AMPS &kp DE_EQUAL				&trans &mo 2 
		>;
		};
		
		right_layer {
		bindings = <
		&kp APOS &kp SEMI &kp UP  &kp DLLR  &kp PRCT    			&kp DE_PLUS  &kp NUM_7 &kp NUM_8 &kp NUM_9 &kp RPRN 
		&kp LBKT  &kp LEFT  &kp DOWN  &kp RIGHT  &mt DE_UNDER DE_MINUS		&mt DE_UNDER DE_MINUS &kp NUM_4  &kp NUM_5  &kp NUM_6   &kp BKSP
		&bt BT_CLR  &kp KPLS &kp LBKT &kp RBKT   &kp BSLH    			&kp STAR &kp NUM_1 &kp NUM_2 &kp NUM_3  &kp RIGHT
					  &mo 3 &trans  				&kp NUM_0  &mo 3 
		>;
		};	
		
		tri_layer {
		bindings = <
		&kp NUM_1  &kp NUM_2 &kp NUM_3 &kp NUM_4 &bootloader 			&bootloader &kp C_PREV   &kp C_PP   &kp C_NEXT  &trans
		&kp TAB &kp F2 &kp F3 &kp F12 &kp F5  				&trans &kp PG_UP  &kp C_VOL_UP &kp C_MUTE &trans 
		&bt BT_CLR  &bt BT_PRV &bt BT_NXT &kp F6 &kp F7   			&trans &kp PG_DN  &kp C_VOL_DN &trans &trans   
					 &trans &trans  				&trans &trans 
		>;
		};	
        
	};
};
